fromList [("Search [amazon]: ",["fire emblem awakening","weights","blutooth headphone adapter"]),("Search [google]: ",["http 200","haskell try","test","xmonad.prompt","le_save_string","loadrunner web_url","vegan cookies","alskdjasd","vim close buffer","gadt haskell","test","test","tst","xdg","test","haskell","nyaa","yaa","cuddles"]),("Search [hoogle]: ",["Data.String.Utils","try","Prelude","Network","Control.Monad","Data.Map","Data.Map","throwM"," Control.Concurrent","tell","MapPrime","Data.Map","data.time","Data.Set","Data.Time","Data.Time","Snap.Datatypes.Headers","Data.Map","uriauth","setUriAuthority","concatmap","Data.Set","Data.Map","tointegral","Data.Map","Data.Set","data.set","profilet","map.lookup","Data.Map","data.map","Data.Mapo","data.map","Map","distinctLilst","Data.Set","random","control.monad.random","Data.Text","Map","withManager","asks","Either","Data.Set","Data.Set","Data.Map","Data.Map","haskell","data.set","set","fmap","Map","Map","data.map","map.empty","runreadert","mconcat","data.map.singleton","data.map","asks","xmonad","xmonad"]),("Search [maps]: ",["home"]),("Search [youtube]: ",["touhou"])]