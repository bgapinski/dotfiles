call plug#begin()

" All the plugins
" Plug 'neomake/neomake'  " Alternative to syntastic that uses async
Plug 'w0rp/ale'

" Split into vim and nvim compatible functions
" Keyword completion
if has('nvim')
    Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
    Plug 'Shougo/neocomplete.vim'
endif

" Other plugins
Plug 'tpope/vim-surround'
Plug 'tpope/vim-vinegar'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-dispatch'
Plug 'Townk/vim-autoclose'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'bling/vim-airline'
Plug 'bkad/CamelCaseMotion'

Plug 'ctrlpvim/ctrlp.vim'
Plug 'dyng/ctrlsf.vim'

Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'

Plug 'luochen1990/rainbow'

" Plug 'dag/vim-fish'

Plug 'editorconfig/editorconfig-vim'

Plug 'idris-hackers/idris-vim'
Plug 'udalov/kotlin-vim'
Plug 'leafgarland/typescript-vim'
Plug 'ianks/vim-tsx'
Plug 'amadeus/vim-mjml'
Plug 'joukevandermaas/vim-ember-hbs'
Plug 'hashivim/vim-terraform'
Plug 'fatih/vim-go'

" Theme
Plug 'w0ng/vim-hybrid'
Plug 'chriskempson/base16-vim'

call plug#end()

filetype plugin indent on

syntax enable
filetype plugin on


" Basic settings
set autoindent
set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab
set backspace=indent,eol,start
set number
set relativenumber
set ruler
set scrolloff=5
set showmode
set showcmd
set hidden

set autoread

" Vim specifc settings
if !has('nvim')
  set encoding=utf-8
  set ttyfast
endif

set ffs=unix

set laststatus=2

set wildmenu
set wildmode=list:longest,full
set wildignore+=*.o,*.hi,*.aux,*.pyc,*.class,*.ibc,*/node_modules/*

" Show bad whitespace
set list
if &listchars ==# 'eol:$'
  exec "set listchars=tab:\uBB\uBB,trail:\uB7,extends:>,precedes:<,nbsp:~"
endif

set cmdheight=1

set shell=zsh

set shortmess=atI

set hlsearch
set incsearch
set ignorecase
set smartcase
set showmatch

set noerrorbells
set vb t_vb=

set clipboard+=unnamedplus

set updatecount=0
set lbr
set tw=500
set wrap

set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
set undodir=~/.vim/undo//
set undofile

set sessionoptions=blank,buffers,curdir,folds,globals,help,localoptions,options,resize,tabpages,winsize,winpos
cmap w!! %!sudo tee > /dev/null %

set mouse=a

set csto=1
set cst
set csverb
nnoremap <silent> <C-\> :cs find c <C-R>=expand("<cword>")<CR><CR>

set completeopt+=longest

set viminfo^=%
set tm=2000

" Terminal color
if &term =~ '256color'
  set t_ut=
endif

set t_Co=256
set background=dark
let base16colorspace=256
colorscheme base16-tomorrow-night

" Color long lines
highlight ColorColumn ctermbg=magenta
call matchadd('ColorColumn', '\%79v', 100)

hi Normal ctermbg = none
hi Search ctermfg=white ctermbg=173 cterm=none guifg=#ffffff guibg=#e5786d gui=none
hi! link Visual Search

" Key rebindings
let mapleader = "\<Space>"
let maplocalleader = "\<Space>"

nmap <Leader>ln :lnext<CR>
nmap <Leader>lp :lprev<CR>

vnoremap <Leader>y "+y
nnoremap <Leader>y "+y
vnoremap <Leader>d "+d
nnoremap <Leader>d "+d
vnoremap <Leader>p "+p
nnoremap <Leader>p "+p

nnoremap ; :
nnoremap j gj
nnoremap k gk

noremap <c-h> <c-w>h
noremap <c-k> <c-w>k
noremap <c-j> <c-w>j
noremap <c-l> <c-w>l

nmap <silent> <leader><cr> :noh\|hi Cursor guibg=red<cr>

" Ex mode is never used
map Q gq

" Open window splits in various places
nmap <leader>wh :leftabove  vnew<CR>
nmap <leader>wl :rightbelow vnew<CR>
nmap <leader>wk :leftabove  new<CR>
nmap <leader>wj :rightbelow new<CR>

" Source vimrc after saving it
augroup sourcing
  autocmd!
  if has('nvim')
    autocmd BufWritePost init.vim source $MYVIMRC
  else
    autocmd BufWritePost .vimrc source $MYVIMRC
  endif
augroup END

" Returns to last edit position when opening files.
augroup last_edit
  autocmd!
  autocmd BufReadPost *
       \ if line("'\"") > 0 && line("'\"") <= line("$") |
       \   exe "normal! g`\"" |
       \ endif
augroup END

" Plugin configuration
if has('nvim')
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#sources = {'_': ['ale']}
else
    let g:ale_completion_enabled = 1
endif

" CamelCaseMotion bindings
map <S-W> <Plug>CamelCaseMotion_w
map <S-B> <Plug>CamelCaseMotion_b
map <S-E> <Plug>CamelCaseMotion_e

" CtrlSF Mappings
nmap <leader>b <Plug>CtrlSFPrompt<CR>
vmap <leader>b <Plug>CtrlSFVwordPath<CR>

let g:airline#extensions#tabline#enabled = 1
let g:ctrlp_map = '<Leader>e'

" Neomake Config
" autocmd! BufWritePost * Neomake
" let g:neomake_open_list = 2
" let g:neomake_python_enabled_makers = ['flake8']
" let g:neomake_javascript_enabled_makers = ['eslint']

" ALE
let g:ale_linters_explicit = 1
let g:ale_linters = { 'typescript': ['eslint'], 'javascript': ['eslint'], 'sass': ['sasslint'], 'go': ['golint'] }

" UltiSnips
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

let g:jsx_ext_required = 0

" Go
let g:go_highlight_types = 1
let g:go_highlight_functions = 1

let g:rainbow_active = 0
